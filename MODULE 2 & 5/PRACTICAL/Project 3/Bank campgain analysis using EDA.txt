import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Set figure size for plots
plt.rcParams["figure.figsize"] = (8, 6)

import warnings
warnings.filterwarnings('ignore')  # Ignore warnings


# Load dataset (Ensure the file path is correct)
file_path = r"C:\Users\milin\OneDrive\Desktop\ADSF\MODULE 2\PRACTICAL\Project 3\bank-dataset-use-for-marketing.csv"
df = pd.read_csv(file_path, sep=';')

# Display dataset shape and info
print("Dataset Shape:", df.shape)
print(df.info())

# Summary statistics
print(df.describe())
print(df.describe(include=["object"]))  # For categorical columns

# Count values of target variable 'y'
print("\nTarget Variable Distribution:\n", df["y"].value_counts())

# Display proportion of different marital statuses
print("\nMarital Status Distribution:\n", df["marital"].value_counts(normalize=True))

# Calculate the share of clients attracted
value_counts = df["y"].value_counts(normalize=True)
if "yes" in value_counts:
    share_yes = value_counts["yes"]
else:
    share_yes = 0

print(f"\nShare of Attracted Clients: {share_yes:.1%}")


# Mean values of numerical features among attracted clients
print("\nMean values for attracted clients:\n", df[df["y"] == "yes"].select_dtypes(include=[np.number]).mean())


# Crosstabs for marital status and response
print("\nCrosstab of Marital Status and Target Variable:\n", pd.crosstab(df["y"], df["marital"]))

# Normalized Crosstab
print("\nNormalized Crosstab:\n", pd.crosstab(df["y"], df["marital"], normalize=True))



# Histograms of all numerical features
df.hist(color="k", bins=30, figsize=(15, 10))
plt.show()

# Boxplot of Age by Marital Status
df.boxplot(column="age", by="marital")
plt.show()

# Boxplot of Age by Education
df.boxplot(column="age", by="education", figsize=(15, 15))
plt.show()
